PROGRAM tst_csv_pipe
%NOLOCKGROUP

VAR
  csv_name FROM tst_csv_main : STRING[16]
  csv_file FROM tst_csv_main : FILE
  block_write FROM tst_csv_main : INTEGER
  entries FROM tst_csv_main : INTEGER
  waitime FROM tst_csv_main : INTEGER
  writedelay FROM tst_csv_main  : INTEGER
  pose : XYZWPR
  i, tme : INTEGER
  time_out : BOOLEAN

%include systemlib.codes.klt
%include systemlib.datatypes.klt

%include math.klh
%include csv.klh

-- sensor csv file
%class tstcsv('csvclass.klc','csvclass.klh')


BEGIN

  FOR i=1 TO entries DO
    --wait for writing to display to finish
    --before continuing to write
    PEND_SEMA(block_write, waitime, time_out)
    IF time_out THEN
      GOTO ENDWRIT
    ENDIF
    
    WRITE TPDISPLAY(CR,'writing pos...')
    --create random initial position
    tme = GET_USEC_TIM
    pose = math__rand_position(tme)
    --write pose to csv pipe
    tstcsv__write_row_xyzwpr(pose)
    
    POST_SEMA (block_write)

    -- create fake work
    DELAY writedelay
  ENDFOR

  -- write to display for remainder data
  -- (name, file, handle open/close)
  tstcsv__write_to_file(csv_name, csv_file, TRUE)
  tstcsv__clear

  ENDWRIT::
  WRITE TPDISPLAY(CR,'csv write is done.')
  
END tst_csv_pipe
