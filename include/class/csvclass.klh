--header
%include header_guard.m
--oop
%include namespace.m

--start header file
header_if -- ifndef class
header_def -- define class

declare_member(class_name,new,class_name,new)
ROUTINE new (filename : STRING ; delim : STRING ; header : STRING) FROM class_name
declare_member(class_name,delete,class_name,del)
ROUTINE delete FROM class_name
declare_member(class_name,clear,class_name,clr)
ROUTINE clear FROM class_name
declare_member(class_name,open,class_name,open)
ROUTINE open FROM class_name
declare_member(class_name,close,class_name,close)
ROUTINE close FROM class_name

--getters
declare_member(class_name,get_filename,class_name,gtfln)
ROUTINE get_filename : STRING FROM class_name
declare_member(class_name,get_line,class_name,gtlin)
ROUTINE get_line : STRING FROM class_name
declare_member(class_name,get_fieldnames,class_name,gtfld)
ROUTINE get_fieldnames : STRING FROM class_name
declare_member(class_name,get_maxlines,class_name,gtmax)
ROUTINE get_maxlines : INTEGER FROM class_name
declare_member(class_name,get_lines_written,class_name,gtwln)
ROUTINE get_lines_written : INTEGER FROM class_name
declare_member(class_name,get_lines_read,class_name,gtrln)
ROUTINE get_lines_read : INTEGER FROM class_name
declare_member(class_name,copy_data,class_name,cpdta)
ROUTINE copy_data : t_DATA_TYPE FROM class_name
declare_member(class_name,get_data,class_name,gtdta)
ROUTINE get_data : t_DATA_TYPE FROM class_name

--setters
declare_member(class_name,set_delimeter,class_name,delim)
ROUTINE set_delimeter (delim : STRING) FROM class_name
declare_member(class_name,set_fieldnames,class_name,stfld)
ROUTINE set_fieldnames (header : STRING) FROM class_name
declare_member(class_name,set_maxlines,class_name,stlns)
ROUTINE set_maxlines (maxlines : INTEGER) FROM class_name

--write
declare_member(class_name,write_fieldnames,class_name,wtfld)
ROUTINE write_fieldnames FROM class_name
declare_member(class_name,write_to_display,class_name,wrdis)
ROUTINE write_to_display FROM class_name
declare_member(class_name,write_to_file,class_name,wrfil)
ROUTINE write_to_file (filename : STRING; fl : FILE; handle_file : BOOLEAN) FROM class_name
declare_member(class_name,write_string,class_name,wstrg)
ROUTINE write_string (str : STRING) FROM class_name
declare_member(class_name,write_row_string,class_name,wrstr)
ROUTINE write_row_string (row : ARRAY[*] OF STRING) FROM class_name
declare_member(class_name,write_row_val,class_name,wrrel)
ROUTINE write_row_val (row : ARRAY[*] OF REAL) FROM class_name
declare_member(class_name,write_row_vector,class_name,wrvec)
ROUTINE write_row_vector (row : VECTOR) FROM class_name
declare_member(class_name,write_row_xyzwpr,class_name,wrpos)
ROUTINE write_row_xyzwpr (row : XYZWPR) FROM class_name

--read
declare_member(class_name,read_header,class_name,rhdr)
ROUTINE read_header FROM class_name
declare_member(class_name,read_line,class_name,rdlne)
ROUTINE read_line : BOOLEAN FROM class_name
  -- ..warning:: required to call `read_line` first, then the type function
declare_member(class_name,read_rarr,class_name,rdarr)
ROUTINE read_rarr (offset : INTEGER; size : INTEGER; out_arr : ARRAY[*] OF REAL) FROM class_name
declare_member(class_name,read_iarr,class_name,idarr)
ROUTINE read_iarr (offset : INTEGER; size : INTEGER; out_arr : ARRAY[*] OF INTEGER) FROM class_name
declare_member(class_name,read_sarr,class_name,sdarr)
ROUTINE read_sarr (offset : INTEGER; size : INTEGER; out_arr : ARRAY[*] OF STRING) FROM class_name
declare_member(class_name,read_int,class_name,rint)
ROUTINE read_int(offset : INTEGER) : INTEGER FROM class_name
declare_member(class_name,read_real,class_name,rrel)
ROUTINE read_real(offset : INTEGER) : REAL FROM class_name
declare_member(class_name,read_string,class_name,rstr)
ROUTINE read_string(offset : INTEGER) : STRING FROM class_name
declare_member(class_name,read_bool,class_name,rbol)
ROUTINE read_bool(offset : INTEGER) : BOOLEAN FROM class_name
declare_member(class_name,read_vector,class_name,rdvc)
ROUTINE read_vector(offset : INTEGER) : VECTOR FROM class_name
declare_member(class_name,read_xyzwpr,class_name,rdpos)
ROUTINE read_xyzwpr(offset : INTEGER) : XYZWPR FROM class_name

%endif --end header